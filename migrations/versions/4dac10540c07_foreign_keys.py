"""foreign keys

Revision ID: 4dac10540c07
Revises: 81de8708bbe6
Create Date: 2023-09-26 18:28:15.441233

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4dac10540c07'
down_revision: Union[str, None] = '81de8708bbe6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('books', 'title',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('books', 'description',
               existing_type=sa.VARCHAR(length=500),
               nullable=True)
    op.alter_column('books', 'condition',
               existing_type=postgresql.ENUM('NEW', 'USED', 'DAMAGED', name='bookcondition'),
               nullable=True)
    op.alter_column('books', 'page_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('books', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('books', 'genre_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'books', 'genres', ['genre_id'], ['id'])
    op.create_foreign_key(None, 'books', 'authors', ['author_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.alter_column('books', 'genre_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('books', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('books', 'page_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('books', 'condition',
               existing_type=postgresql.ENUM('NEW', 'USED', 'DAMAGED', name='bookcondition'),
               nullable=False)
    op.alter_column('books', 'description',
               existing_type=sa.VARCHAR(length=500),
               nullable=False)
    op.alter_column('books', 'title',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    # ### end Alembic commands ###
